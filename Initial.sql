--DB NAME: sfsystem
--username: sfadmin
--password: sfadmin

create table USERS
(
	USER_ID INTEGER CONSTRAINT user_pk primary key GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	ULID VARCHAR(32),
	PASSWORD VARCHAR(32),
	ISADMIN INTEGER,
	CREATED_TS TIMESTAMP,
	LAST_UPDT_TS TIMESTAMP
);

create table REVIEW_COMMENT
(
	COMMENT_ID INTEGER CONSTRAINT review_comment_pk primary key GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	ULID VARCHAR(32),
	ALL_SCH_ID INTEGER,
	COMMENT_TEXT VARCHAR(3000),
	CREATED_TS TIMESTAMP,
	LAST_UPDT_TS TIMESTAMP	
);

create table ALL_SCHEDULE
(
	ALL_SCH_ID INTEGER CONSTRAINT all_schedule_pk primary key GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	SCHEDULE_NAME VARCHAR(100),
	DESCRIPTION VARCHAR(255),
	CREATED_TS TIMESTAMP,
	LAST_UPDT_TS TIMESTAMP
);

create table TO_DO
(
	TO_DO_ID INTEGER CONSTRAINT to_do_pk primary key GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	ULID VARCHAR(32),
	ALL_SCH_ID INTEGER,
	STATUS INTEGER,
	CREATED_TS TIMESTAMP,
	LAST_UPDT_TS TIMESTAMP
 );

create table COURSE_SECTION
(
	SECTION_ID INTEGER CONSTRAINT section_pk primary key GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	COURSE_ID INTEGER,
	ALL_SCH_ID INTEGER,
	SECTION_NUMBER VARCHAR(32),
	CREATED_TS TIMESTAMP,
	LAST_UPDT_TS TIMESTAMP
);

create table COURSE_PREFERENCE
(
	COURSE_PREFERENCE_ID INTEGER CONSTRAINT course_pref_pk primary key GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	PROF_ID INTEGER,
	COURSE_ID INTEGER,
	LAB_NEEDED INTEGER,
	COMMENTS VARCHAR(3000),
	CREATED_TS TIMESTAMP,
	LAST_UPDT_TS TIMESTAMP
);

create table DAY_PREFERENCE
(
	DAY_PREFERENCE_ID INTEGER CONSTRAINT day_pref_pk primary key GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	PROF_ID INTEGER,
	DAYS VARCHAR(100),
	IS_EVENING INTEGER,
	CREATED_TS TIMESTAMP,
	LAST_UPDT_TS TIMESTAMP
);

CREATE TABLE PROFESSOR
(
        PROF_ID INTEGER CONSTRAINT professor_pk primary key GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
        PROF_NAME varchar(100),
        ULID varchar(100),
        EMPLOYMENT_STATUS INTEGER,
        TEACHING_STATUS INTEGER,
        CREATED_TS TIMESTAMP ,
        LAST_UPDT_TS TIMESTAMP 
);

CREATE TABLE ROOM
(
        ROOM_ID INTEGER CONSTRAINT room_pk primary key GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
        ROOM_NAME varchar(100),
        IS_LAB INTEGER,
        IS_AVAILABLE INTEGER,
        CREATED_TS TIMESTAMP ,
        LAST_UPDT_TS TIMESTAMP 
);

CREATE TABLE COURSE
(
        COURSE_ID INTEGER CONSTRAINT course_pk primary key GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
        COURSE_CODE varchar(100),
        COURSE_NAME varchar(100),
        CREATED_TS TIMESTAMP ,
        LAST_UPDT_TS TIMESTAMP 
);

CREATE TABLE SCHEDULE
(
        SCHEDULE_ID INTEGER CONSTRAINT schedule_pk primary key GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
        ALL_SCH_ID INTEGER,
        SECTION_ID INTEGER,
        PROF_ID INTEGER,
        ROOM_ID INTEGER,
        DAYS varchar(100),
        CLASS_TIME varchar(100),
        CREATED_TS TIMESTAMP ,
        LAST_UPDT_TS TIMESTAMP 
);


INSERT INTO USERS (ULID,PASSWORD,ISADMIN,CREATED_TS,LAST_UPDT_TS) VALUES ('admin','admin',1,CURRENT TIMESTAMP,CURRENT TIMESTAMP);
INSERT INTO USERS (ULID,PASSWORD,ISADMIN,CREATED_TS,LAST_UPDT_TS) VALUES ('faculty','faculty',0,CURRENT TIMESTAMP,CURRENT TIMESTAMP);
SELECT COUNT(1) FROM USERS WHERE ULID = 'admin'
SELECT * FROM USERS;

--POPULATE ROOM TABLE
INSERT INTO SFADMIN.ROOM (ROOM_NAME, IS_LAB, IS_AVAILABLE, CREATED_TS, LAST_UPDT_TS) VALUES ('CVA 151', 0, 1, CURRENT TIMESTAMP, CURRENT TIMESTAMP);
INSERT INTO SFADMIN.ROOM (ROOM_NAME, IS_LAB, IS_AVAILABLE, CREATED_TS, LAST_UPDT_TS) VALUES ('OU 132', 1, 1, CURRENT TIMESTAMP, CURRENT TIMESTAMP);
INSERT INTO SFADMIN.ROOM (ROOM_NAME, IS_LAB, IS_AVAILABLE, CREATED_TS, LAST_UPDT_TS) VALUES ('OU 133', 1, 1, CURRENT TIMESTAMP, CURRENT TIMESTAMP);
INSERT INTO SFADMIN.ROOM (ROOM_NAME, IS_LAB, IS_AVAILABLE, CREATED_TS, LAST_UPDT_TS) VALUES ('OU 213D', 1, 1, CURRENT TIMESTAMP, CURRENT TIMESTAMP);
INSERT INTO SFADMIN.ROOM (ROOM_NAME, IS_LAB, IS_AVAILABLE, CREATED_TS, LAST_UPDT_TS) VALUES ('OU 213E', 1, 1, CURRENT TIMESTAMP, CURRENT TIMESTAMP);
INSERT INTO SFADMIN.ROOM (ROOM_NAME, IS_LAB, IS_AVAILABLE, CREATED_TS, LAST_UPDT_TS) VALUES ('STV 101', 0, 1, CURRENT TIMESTAMP, CURRENT TIMESTAMP);
INSERT INTO SFADMIN.ROOM (ROOM_NAME, IS_LAB, IS_AVAILABLE, CREATED_TS, LAST_UPDT_TS) VALUES ('STV 104', 0, 1, CURRENT TIMESTAMP, CURRENT TIMESTAMP);
INSERT INTO SFADMIN.ROOM (ROOM_NAME, IS_LAB, IS_AVAILABLE, CREATED_TS, LAST_UPDT_TS) VALUES ('STV 105', 0, 1, CURRENT TIMESTAMP, CURRENT TIMESTAMP);
INSERT INTO SFADMIN.ROOM (ROOM_NAME, IS_LAB, IS_AVAILABLE, CREATED_TS, LAST_UPDT_TS) VALUES ('STV 108', 0, 1, CURRENT TIMESTAMP, CURRENT TIMESTAMP);
INSERT INTO SFADMIN.ROOM (ROOM_NAME, IS_LAB, IS_AVAILABLE, CREATED_TS, LAST_UPDT_TS) VALUES ('STV 139A', 0, 1, CURRENT TIMESTAMP, CURRENT TIMESTAMP);
INSERT INTO SFADMIN.ROOM (ROOM_NAME, IS_LAB, IS_AVAILABLE, CREATED_TS, LAST_UPDT_TS) VALUES ('WIH 123', 0, 1, CURRENT TIMESTAMP, CURRENT TIMESTAMP);

--Populate COURSE table
INSERT INTO SFADMIN.COURSE (COURSE_CODE, COURSE_NAME, CREATED_TS, LAST_UPDT_TS) 
	VALUES ("IT353", "Web Application Development", CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
INSERT INTO SFADMIN.COURSE (COURSE_CODE, COURSE_NAME, CREATED_TS, LAST_UPDT_TS) 
	VALUES ("IT354", "Advanced Web Application Development", CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
INSERT INTO SFADMIN.COURSE (COURSE_CODE, COURSE_NAME, CREATED_TS, LAST_UPDT_TS) 
	VALUES ("IT168", "JAVA", CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
INSERT INTO SFADMIN.COURSE (COURSE_CODE, COURSE_NAME, CREATED_TS, LAST_UPDT_TS) 
	VALUES ("IT485", "ASP.NET", CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);